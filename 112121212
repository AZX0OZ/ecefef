local Library = {}
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")
local RunService = game:GetService("RunService")

-- Создаем случайное имя для GUI, чтобы сделать его менее заметным
local random_string = tostring(math.random(1000000, 9999999))
local SafeMenuName = "Interface"..random_string

function Library:CreateWindow(name)
    local SafeMenu = Instance.new("ScreenGui")
    local Main = Instance.new("Frame")
    local Sidebar = Instance.new("Frame")
    local Container = Instance.new("Frame")
    local UIListLayout = Instance.new("UIListLayout")
    local ContentContainer = Instance.new("Frame")
    
    -- Настройка основного интерфейса
    SafeMenu.Name = SafeMenuName
    SafeMenu.Parent = CoreGui
    SafeMenu.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    Main.Name = "Main"
    Main.Parent = SafeMenu
    Main.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    Main.BorderSizePixel = 0
    Main.Position = UDim2.new(0.5, -300, 0.5, -175)
    Main.Size = UDim2.new(0, 600, 0, 350)
    
    -- Создание бокового меню
    Sidebar.Name = "Sidebar"
    Sidebar.Parent = Main
    Sidebar.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
    Sidebar.BorderSizePixel = 0
    Sidebar.Size = UDim2.new(0, 50, 1, 0)
    
    -- Контейнер для кнопок
    Container.Name = "Container"
    Container.Parent = Sidebar
    Container.BackgroundTransparency = 1
    Container.Position = UDim2.new(0, 0, 0, 10)
    Container.Size = UDim2.new(1, 0, 1, -20)
    
    UIListLayout.Parent = Container
    UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayout.Padding = UDim.new(0, 10)
    
    -- Контейнер для содержимого
    ContentContainer.Name = "ContentContainer"
    ContentContainer.Parent = Main
    ContentContainer.BackgroundTransparency = 1
    ContentContainer.Position = UDim2.new(0, 60, 0, 10)
    ContentContainer.Size = UDim2.new(1, -70, 1, -20)
    
    -- Функции для создания элементов меню
    local Window = {}
    
    function Window:CreateTab(name, icon)
        local Tab = Instance.new("TextButton")
        local Content = Instance.new("Frame")
        local UIListLayout2 = Instance.new("UIListLayout")
        
        Tab.Name = name
        Tab.Parent = Container
        Tab.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        Tab.BorderSizePixel = 0
        Tab.Size = UDim2.new(0, 40, 0, 40)
        Tab.Text = icon or "?"
        Tab.TextColor3 = Color3.fromRGB(255, 255, 255)
        Tab.TextSize = 18
        
        Content.Name = name.."Content"
        Content.Parent = ContentContainer
        Content.BackgroundTransparency = 1
        Content.Size = UDim2.new(1, 0, 1, 0)
        Content.Visible = false
        
        UIListLayout2.Parent = Content
        UIListLayout2.SortOrder = Enum.SortOrder.LayoutOrder
        UIListLayout2.Padding = UDim.new(0, 5)
        
        -- Функции для создания элементов вкладки
        local TabElements = {}
        
        function TabElements:CreateToggle(text, callback)
            local Toggle = Instance.new("Frame")
            local Title = Instance.new("TextLabel")
            local Button = Instance.new("TextButton")
            local enabled = false
            
            Toggle.Name = "Toggle"
            Toggle.Parent = Content
            Toggle.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
            Toggle.BorderSizePixel = 0
            Toggle.Size = UDim2.new(1, 0, 0, 35)
            
            Title.Name = "Title"
            Title.Parent = Toggle
            Title.BackgroundTransparency = 1
            Title.Position = UDim2.new(0, 10, 0, 0)
            Title.Size = UDim2.new(1, -60, 1, 0)
            Title.Font = Enum.Font.SourceSans
            Title.Text = text
            Title.TextColor3 = Color3.fromRGB(255, 255, 255)
            Title.TextSize = 16
            Title.TextXAlignment = Enum.TextXAlignment.Left
            
            Button.Name = "Button"
            Button.Parent = Toggle
            Button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            Button.BorderSizePixel = 0
            Button.Position = UDim2.new(1, -50, 0.5, -10)
            Button.Size = UDim2.new(0, 40, 0, 20)
            Button.Text = ""
            
            Button.MouseButton1Click:Connect(function()
                enabled = not enabled
                local color = enabled and Color3.fromRGB(60, 120, 255) or Color3.fromRGB(40, 40, 40)
                TweenService:Create(Button, TweenInfo.new(0.2), {BackgroundColor3 = color}):Play()
                if callback then callback(enabled) end
            end)
            
            return Toggle
        end
        
        -- Добавляем функцию ESP
        function TabElements:CreateESP(text)
            local Toggle = self:CreateToggle(text or "ESP", function(enabled)
                if enabled then
                    local function CreateESP(player)
                        local esp = Instance.new("BoxHandleAdornment")
                        esp.Name = "ESP_" .. tostring(math.random(1000000, 9999999))
                        esp.Adornee = player.Character
                        esp.AlwaysOnTop = true
                        esp.ZIndex = 0
                        esp.Size = player.Character:WaitForChild("HumanoidRootPart").Size
                        esp.Transparency = 0.7
                        esp.Color3 = Color3.fromRGB(255, 0, 0)
                        esp.Parent = player.Character
                        
                        local nameESP = Instance.new("BillboardGui")
                        nameESP.Name = "NameESP_" .. tostring(math.random(1000000, 9999999))
                        nameESP.Parent = player.Character
                        nameESP.Adornee = player.Character:WaitForChild("Head")
                        nameESP.Size = UDim2.new(0, 100, 0, 30)
                        nameESP.StudsOffset = Vector3.new(0, 2, 0)
                        nameESP.AlwaysOnTop = true
                        
                        local nameLabel = Instance.new("TextLabel")
                        nameLabel.Parent = nameESP
                        nameLabel.BackgroundTransparency = 1
                        nameLabel.Size = UDim2.new(1, 0, 1, 0)
                        nameLabel.Text = player.Name
                        nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                        nameLabel.TextScaled = true
                    end
                    
                    for _, player in pairs(game.Players:GetPlayers()) do
                        if player ~= game.Players.LocalPlayer then
                            CreateESP(player)
                        end
                    end
                    
                    game.Players.PlayerAdded:Connect(CreateESP)
                else
                    for _, player in pairs(game.Players:GetPlayers()) do
                        if player.Character then
                            for _, esp in pairs(player.Character:GetChildren()) do
                                if esp.Name:match("ESP_") or esp.Name:match("NameESP_") then
                                    esp:Destroy()
                                end
                            end
                        end
                    end
                end
            end)
            return Toggle
        end
        
        -- Добавляем функцию Aimbot
        function TabElements:CreateAimbot(text)
            local Toggle = self:CreateToggle(text or "Aimbot", function(enabled)
                if enabled then
                    local function GetClosestPlayer()
                        local closestPlayer = nil
                        local shortestDistance = math.huge
                        
                        for _, player in pairs(game.Players:GetPlayers()) do
                            if player ~= game.Players.LocalPlayer and player.Character and 
                               player.Character:FindFirstChild("HumanoidRootPart") and 
                               player.Character:FindFirstChild("Humanoid") and 
                               player.Character.Humanoid.Health > 0 then
                                
                                local pos = game.Workspace.CurrentCamera:WorldToViewportPoint(player.Character.HumanoidRootPart.Position)
                                local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(game.Players.LocalPlayer:GetMouse().X, game.Players.LocalPlayer:GetMouse().Y)).magnitude
                                
                                if magnitude < shortestDistance then
                                    closestPlayer = player
                                    shortestDistance = magnitude
                                end
                            end
                        end
                        
                        return closestPlayer
                    end
                    
                    game:GetService("RunService").RenderStepped:Connect(function()
                        if enabled then
                            local closestPlayer = GetClosestPlayer()
                            if closestPlayer and closestPlayer.Character and closestPlayer.Character:FindFirstChild("Head") then
                                local pos = game.Workspace.CurrentCamera:WorldToViewportPoint(closestPlayer.Character.Head.Position)
                                mousemoverel((pos.X - game.Players.LocalPlayer:GetMouse().X) * 0.5, (pos.Y - game.Players.LocalPlayer:GetMouse().Y) * 0.5)
                            end
                        end
                    end)
                end
            end)
            return Toggle
        end
        
        -- Добавляем функцию настройки скорости
        function TabElements:CreateSlider(text, min, max, default, callback)
            local Slider = Instance.new("Frame")
            local Title = Instance.new("TextLabel")
            local SliderBar = Instance.new("Frame")
            local SliderButton = Instance.new("TextButton")
            local SliderValue = Instance.new("TextLabel")
            
            Slider.Name = "Slider"
            Slider.Parent = Content
            Slider.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
            Slider.BorderSizePixel = 0
            Slider.Size = UDim2.new(1, 0, 0, 50)
            
            Title.Name = "Title"
            Title.Parent = Slider
            Title.BackgroundTransparency = 1
            Title.Position = UDim2.new(0, 10, 0, 0)
            Title.Size = UDim2.new(1, -20, 0, 25)
            Title.Font = Enum.Font.SourceSans
            Title.Text = text
            Title.TextColor3 = Color3.fromRGB(255, 255, 255)
            Title.TextSize = 16
            Title.TextXAlignment = Enum.TextXAlignment.Left
            
            SliderBar.Name = "SliderBar"
            SliderBar.Parent = Slider
            SliderBar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            SliderBar.BorderSizePixel = 0
            SliderBar.Position = UDim2.new(0, 10, 0, 35)
            SliderBar.Size = UDim2.new(1, -20, 0, 5)
            
            SliderButton.Name = "SliderButton"
            SliderButton.Parent = SliderBar
            SliderButton.BackgroundColor3 = Color3.fromRGB(60, 120, 255)
            SliderButton.BorderSizePixel = 0
            SliderButton.Size = UDim2.new(0, 10, 0, 15)
            SliderButton.Position = UDim2.new(0, -5, 0, -5)
            SliderButton.Text = ""
            
            SliderValue.Name = "SliderValue"
            SliderValue.Parent = Slider
            SliderValue.BackgroundTransparency = 1
            SliderValue.Position = UDim2.new(1, -50, 0, 0)
            SliderValue.Size = UDim2.new(0, 40, 0, 25)
            SliderValue.Font = Enum.Font.SourceSans
            SliderValue.Text = tostring(default)
            SliderValue.TextColor3 = Color3.fromRGB(255, 255, 255)
            SliderValue.TextSize = 16
            
            local dragging = false
            local function updateSlider(input)
                local pos = UDim2.new(math.clamp((input.Position.X - SliderBar.AbsolutePosition.X) / SliderBar.AbsoluteSize.X, 0, 1), -5, 0, -5)
                SliderButton.Position = pos
                local value = math.floor(min + (max - min) * pos.X.Scale)
                SliderValue.Text = tostring(value)
                if callback then callback(value) end
            end
            
            SliderButton.MouseButton1Down:Connect(function()
                dragging = true
            end)
            
            game:GetService("UserInputService").InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = false
                end
            end)
            
            game:GetService("UserInputService").InputChanged:Connect(function(input)
                if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                    updateSlider(input)
                end
            end)
            
            return Slider
        end
        
        return TabElements
    end
    
    -- Делаем окно перетаскиваемым
    local dragging
    local dragInput
    local dragStart
    local startPos
    
    local function update(input)
        local delta = input.Position - dragStart
        Main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
    
    Main.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = Main.Position
        end
    end)
    
    Main.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
    
    RunService.RenderStepped:Connect(function()
        if dragging and dragInput then
            update(dragInput)
        end
    end)
    
    return Window
end

return Library 
