local Library = {}
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")
local RunService = game:GetService("RunService")

-- Создаем случайное имя для GUI, чтобы сделать его менее заметным
local random_string = tostring(math.random(1000000, 9999999))
local SafeMenuName = "Interface"..random_string

function Library:CreateWindow(name)
    local SafeMenu = Instance.new("ScreenGui")
    local Main = Instance.new("Frame")
    local Sidebar = Instance.new("Frame")
    local Container = Instance.new("Frame")
    local UIListLayout = Instance.new("UIListLayout")
    local ContentContainer = Instance.new("Frame")
    
    -- Настройка основного интерфейса
    SafeMenu.Name = SafeMenuName
    SafeMenu.Parent = CoreGui
    SafeMenu.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    Main.Name = "Main"
    Main.Parent = SafeMenu
    Main.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    Main.BorderSizePixel = 0
    Main.Position = UDim2.new(0.5, -300, 0.5, -175)
    Main.Size = UDim2.new(0, 600, 0, 350)
    
    -- Создание бокового меню
    Sidebar.Name = "Sidebar"
    Sidebar.Parent = Main
    Sidebar.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
    Sidebar.BorderSizePixel = 0
    Sidebar.Size = UDim2.new(0, 50, 1, 0)
    
    -- Контейнер для кнопок
    Container.Name = "Container"
    Container.Parent = Sidebar
    Container.BackgroundTransparency = 1
    Container.Position = UDim2.new(0, 0, 0, 10)
    Container.Size = UDim2.new(1, 0, 1, -20)
    
    UIListLayout.Parent = Container
    UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayout.Padding = UDim.new(0, 10)
    
    -- Контейнер для содержимого
    ContentContainer.Name = "ContentContainer"
    ContentContainer.Parent = Main
    ContentContainer.BackgroundTransparency = 1
    ContentContainer.Position = UDim2.new(0, 60, 0, 10)
    ContentContainer.Size = UDim2.new(1, -70, 1, -20)
    
    -- Функции для создания элементов меню
    local Window = {}
    
    function Window:CreateTab(name, icon)
        local Tab = Instance.new("TextButton")
        local Content = Instance.new("Frame")
        local UIListLayout2 = Instance.new("UIListLayout")
        
        Tab.Name = name
        Tab.Parent = Container
        Tab.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        Tab.BorderSizePixel = 0
        Tab.Size = UDim2.new(0, 40, 0, 40)
        Tab.Text = icon or "?"
        Tab.TextColor3 = Color3.fromRGB(255, 255, 255)
        Tab.TextSize = 18
        
        Content.Name = name.."Content"
        Content.Parent = ContentContainer
        Content.BackgroundTransparency = 1
        Content.Size = UDim2.new(1, 0, 1, 0)
        Content.Visible = false
        
        UIListLayout2.Parent = Content
        UIListLayout2.SortOrder = Enum.SortOrder.LayoutOrder
        UIListLayout2.Padding = UDim.new(0, 5)
        
        -- Функции для создания элементов вкладки
        local TabElements = {}
        
        function TabElements:CreateToggle(text, callback)
            local Toggle = Instance.new("Frame")
            local Title = Instance.new("TextLabel")
            local Button = Instance.new("TextButton")
            local enabled = false
            
            Toggle.Name = "Toggle"
            Toggle.Parent = Content
            Toggle.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
            Toggle.BorderSizePixel = 0
            Toggle.Size = UDim2.new(1, 0, 0, 35)
            
            Title.Name = "Title"
            Title.Parent = Toggle
            Title.BackgroundTransparency = 1
            Title.Position = UDim2.new(0, 10, 0, 0)
            Title.Size = UDim2.new(1, -60, 1, 0)
            Title.Font = Enum.Font.SourceSans
            Title.Text = text
            Title.TextColor3 = Color3.fromRGB(255, 255, 255)
            Title.TextSize = 16
            Title.TextXAlignment = Enum.TextXAlignment.Left
            
            Button.Name = "Button"
            Button.Parent = Toggle
            Button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            Button.BorderSizePixel = 0
            Button.Position = UDim2.new(1, -50, 0.5, -10)
            Button.Size = UDim2.new(0, 40, 0, 20)
            Button.Text = ""
            
            Button.MouseButton1Click:Connect(function()
                enabled = not enabled
                local color = enabled and Color3.fromRGB(60, 120, 255) or Color3.fromRGB(40, 40, 40)
                TweenService:Create(Button, TweenInfo.new(0.2), {BackgroundColor3 = color}):Play()
                if callback then callback(enabled) end
            end)
            
            return Toggle
        end
        
        return TabElements
    end
    
    -- Делаем окно перетаскиваемым
    local dragging
    local dragInput
    local dragStart
    local startPos
    
    local function update(input)
        local delta = input.Position - dragStart
        Main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
    
    Main.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = Main.Position
        end
    end)
    
    Main.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
    
    RunService.RenderStepped:Connect(function()
        if dragging and dragInput then
            update(dragInput)
        end
    end)
    
    return Window
end

return Library 
